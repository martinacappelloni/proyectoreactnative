{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { db, auth } from \"../firebase/config\";\nimport firebase from 'firebase';\n\nvar Post = function (_Component) {\n  _inherits(Post, _Component);\n\n  var _super = _createSuper(Post);\n\n  function Post(props) {\n    var _this;\n\n    _classCallCheck(this, Post);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      likes: 0,\n      myLike: false,\n      showModal: false,\n      comment: ''\n    };\n    return _this;\n  }\n\n  _createClass(Post, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(this.props.postData);\n\n      if (this.props.postData.data.likes) {\n        this.setState({\n          likes: this.props.postData.data.likes.length,\n          myLike: this.props.postData.data.likes.includes(auth.currentUser.email)\n        });\n      }\n    }\n  }, {\n    key: \"darLike\",\n    value: function darLike() {\n      var _this2 = this;\n\n      db.collection('posts').doc(this.props.postData.id).update({\n        likes: firebase.firestore.FieldValue.arrayUnion(auth.currentUser.email)\n      }).then(function () {\n        return _this2.setState({\n          likes: _this2.state.likes + 1,\n          myLike: true\n        });\n      });\n    }\n  }, {\n    key: \"quitarLike\",\n    value: function quitarLike() {\n      var _this3 = this;\n\n      db.collection('posts').doc(this.props.postData.id).update({\n        likes: firebase.firestore.FieldValue.arrayRemove(auth.currentUser.email)\n      }).then(function () {\n        return _this3.setState({\n          likes: _this3.state.likes - 1,\n          myLike: false\n        });\n      });\n    }\n  }, {\n    key: \"showModal\",\n    value: function showModal() {\n      this.setState({\n        showModal: true\n      });\n    }\n  }, {\n    key: \"hideModal\",\n    value: function hideModal() {\n      this.setState({\n        showModal: false\n      });\n    }\n  }, {\n    key: \"guardarComentario\",\n    value: function guardarComentario() {\n      var _this4 = this;\n\n      var oneComment = {\n        createdAt: Date.now(),\n        author: auth.currentUser.email,\n        comment: this.state.comment\n      };\n      db.collection('posts').doc(this.props.postData.id).update({\n        comments: firebase.firestore.FieldValue.arrayUnion(oneComment)\n      }).then(function () {\n        _this4.setState({\n          comment: ''\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      return React.createElement(View, {\n        style: styles.container\n      }, React.createElement(Text, null, \"Texto del post: \", this.props.postData.data.texto), React.createElement(Text, null, \"User: \", this.props.postData.data.owner), React.createElement(Text, null, \"Likes: \", this.state.likes), this.state.myLike === false ? React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this5.darLike();\n        }\n      }, React.createElement(Text, null, \"Me gusta\")) : React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this5.quitarLike();\n        }\n      }, React.createElement(Text, null, \"Quitar Like\")), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this5.showModal();\n        }\n      }, React.createElement(Text, null, \"Ver comentarios\")), this.state.showModal ? React.createElement(Modal, {\n        style: styles.modalContainer,\n        visible: this.state.showModal,\n        animationType: \"slide\",\n        transparent: false\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this5.hideModal();\n        }\n      }, React.createElement(Text, {\n        style: styles.closeButton\n      }, \"X\")), React.createElement(FlatList, {\n        data: this.props.postData.data.comments,\n        keyExtractor: function keyExtractor(comment) {\n          return comment.createdAt.toString();\n        },\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return React.createElement(Text, null, item.author, \": \", item.comment);\n        }\n      }), React.createElement(View, null, React.createElement(TextInput, {\n        style: styles.input,\n        placeholder: \"Comentar...\",\n        keyboardType: \"deafult\",\n        multiline: true,\n        onChangeText: function onChangeText(text) {\n          return _this5.setState({\n            comment: text\n          });\n        },\n        value: this.state.comment\n      }), React.createElement(TouchableOpacity, {\n        style: styles.button,\n        onPress: function onPress() {\n          return _this5.guardarComentario();\n        }\n      }, React.createElement(Text, {\n        style: styles.textButton\n      }, \"Guardar comentario\")))) : React.createElement(Text, null, \" \"));\n    }\n  }]);\n\n  return Post;\n}(Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    marginBottom: 20,\n    borderRadius: 4,\n    borderColor: '#ccc',\n    borderWidth: 1,\n    padding: 10\n  },\n  modalContainer: {\n    width: '97%',\n    borderRadius: 4,\n    padding: 5,\n    alignSelf: 'center',\n    boxShadow: 'rgb(204 204 204) 0px 0px 9px 7px',\n    marginTop: 20,\n    marginBottom: 10\n  },\n  closeButton: {\n    color: '#fff',\n    padding: 5,\n    backgroundColor: '#dc4545',\n    alignSelf: 'flex-end',\n    borderRadius: 4,\n    paddingHorizontal: 8\n  },\n  input: {\n    height: 20,\n    paddingVertical: 15,\n    paddingHorizontal: 10,\n    borderWidth: 1,\n    borderStyle: 'solid',\n    backgroundColor: '#ccc',\n    borderRadius: 6,\n    marginVertical: 10\n  },\n  button: {\n    backgroundColor: '#28a745',\n    paddingHorizontal: 10,\n    paddingVertical: 6,\n    textAlign: 'center',\n    borderRadius: 4,\n    borderWidth: 1,\n    borderStyle: 'solid',\n    borderColor: '#28a745'\n  },\n  textButton: {\n    color: '#fff'\n  }\n});\nexport default Post;","map":{"version":3,"sources":["/Users/martinacappelloni/Documents/UdeSA/Segundo Año/Programación III/proyectoreactnative/src/components/Post.js"],"names":["React","Component","db","auth","firebase","Post","props","state","likes","myLike","showModal","comment","console","log","postData","data","setState","length","includes","currentUser","email","collection","doc","id","update","firestore","FieldValue","arrayUnion","then","arrayRemove","oneComment","createdAt","Date","now","author","comments","styles","container","texto","owner","darLike","quitarLike","modalContainer","hideModal","closeButton","toString","item","input","text","button","guardarComentario","textButton","StyleSheet","create","marginBottom","borderRadius","borderColor","borderWidth","padding","width","alignSelf","boxShadow","marginTop","color","backgroundColor","paddingHorizontal","height","paddingVertical","borderStyle","marginVertical","textAlign"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport {Text, TouchableOpacity, View, StyleSheet, Modal, FlatList, TextInput} from 'react-native'\nimport { db, auth } from '../firebase/config';\nimport firebase from 'firebase'\n\nclass Post extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            likes: 0,\n            myLike: false, \n            showModal: false, //esto es para la vista del modal\n            comment: '', //para limpiar el campo despues de enviar\n        }\n    }\n\n    componentDidMount(){\n        console.log(this.props.postData)\n        if(this.props.postData.data.likes){\n            this.setState({\n                likes: this.props.postData.data.likes.length,\n                myLike: this.props.postData.data.likes.includes(auth.currentUser.email), //mirando el array de posts de likes y se fija si esta el email del usuario logueado\n            })\n        }     \n    }\n\n    darLike(){\n        //Agregar mi usuario a un array de usuarios que likearon\n        //Updatear el registro (documento)\n        db.collection('posts').doc(this.props.postData.id).update({\n            likes: firebase.firestore.FieldValue.arrayUnion(auth.currentUser.email)         //identificamos el posteo y le agregamos el usuario que le dio like\n        })\n        //Cambiar estado\n        .then(() => (\n            this.setState({\n                likes: this.state.likes + 1,\n                myLike: true, //aca decidimos si le mostramos el me gusta o el quitar like\n            })\n        ))        \n    }\n\n    quitarLike(){\n        //Quitar mi usuario de un array de usuarios que likearon\n        db.collection('posts').doc(this.props.postData.id).update({\n            likes: firebase.firestore.FieldValue.arrayRemove(auth.currentUser.email)\n        })\n        //Cambiar estado\n        .then(() => (\n            this.setState({\n                likes: this.state.likes - 1,\n                myLike: false, \n            })\n        ))   \n    }\n\n    showModal(){\n        this.setState({\n            showModal: true,\n        })\n    }\n    hideModal(){\n        this.setState({\n            showModal: false,\n        })\n    }\n\n    guardarComentario(){\n        //armar el comentario que vamos a guardar\n        let oneComment = {\n            createdAt: Date.now(),\n            author: auth.currentUser.email,\n            comment: this.state.comment\n        }\n        //guardarlo en una coleccion: modificar un posteo\n        //identificar el documento/post que queremos modificar\n        db.collection('posts').doc(this.props.postData.id).update({\n            comments: firebase.firestore.FieldValue.arrayUnion(oneComment),\n        })\n        //conseguir el estado y limpiarlo\n        .then(()=>{\n            this.setState({\n                comment: '',\n            })\n        })\n    }\n\n    render(){\n        return(\n            <View style={styles.container}>\n                <Text>Texto del post: {this.props.postData.data.texto}</Text>\n                <Text>User: {this.props.postData.data.owner}</Text>\n                <Text>Likes: {this.state.likes}</Text>\n                { //Cambio de botones me gusta / quitar like\n                    this.state.myLike === false ?\n                    <TouchableOpacity onPress={() => this.darLike() }> \n                        <Text>Me gusta</Text>\n                    </TouchableOpacity> :\n                    <TouchableOpacity onPress={() => this.quitarLike() }> \n                        <Text>Quitar Like</Text>\n                    </TouchableOpacity>\n                }\n\n                {/* Ver modal */}\n                <TouchableOpacity onPress={() => this.showModal() }> \n                        <Text>Ver comentarios</Text>\n                </TouchableOpacity>\n\n                {/* Modal para comentarios */}\n                { this.state.showModal ?\n                    <Modal \n                        style={styles.modalContainer}\n                        visible={this.state.showModal}\n                        animationType='slide'\n                        transparent={false}\n                    > \n                        <TouchableOpacity onPress={() => this.hideModal() }> \n                            <Text style={styles.closeButton}>X</Text>\n                        </TouchableOpacity>\n                        {/* FlarList para mostrar comentarios */}\n                        <FlatList \n                            data={this.props.postData.data.comments} //el array\n                            keyExtractor={(comment) => comment.createdAt.toString()} //es equivalente a la prop key que necesitamos para el map y comment es cada uno de los elementos del array\n                            renderItem={({item}) => <Text>{item.author}: {item.comment}</Text>}\n                        />\n                        {/* Formulario para nuevo comentario */}\n                        <View>\n                            <TextInput \n                                style={styles.input}\n                                placeholder='Comentar...'\n                                keyboardType='deafult'\n                                multiline\n                                onChangeText={text => this.setState({comment: text})}\n                                value={this.state.comment}\n                            />\n                            <TouchableOpacity\n                                style={styles.button}\n                                onPress={() => this.guardarComentario() }> \n                                <Text style={styles.textButton}>Guardar comentario</Text>\n                            </TouchableOpacity>\n                        </View>\n                    </Modal> :\n                    <Text> </Text>\n                }\n                \n            </View>\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    container:{\n        marginBottom: 20,\n        borderRadius: 4,\n        borderColor: '#ccc',\n        borderWidth: 1,\n        padding: 10,\n    },\n    modalContainer:{\n        width: '97%',\n        borderRadius: 4,\n        padding: 5,\n        alignSelf: 'center',\n        boxShadow: 'rgb(204 204 204) 0px 0px 9px 7px',\n        marginTop: 20,\n        marginBottom: 10,\n    },\n    closeButton:{\n        color: '#fff',\n        padding: 5,\n        backgroundColor: '#dc4545',\n        alignSelf: 'flex-end',\n        borderRadius: 4,\n        paddingHorizontal: 8,\n    },\n    input: {\n        height: 20,\n        paddingVertical: 15,\n        paddingHorizontal: 10,\n        borderWidth: 1,\n        borderStyle: 'solid',\n        backgroundColor: '#ccc',\n        borderRadius: 6,\n        marginVertical: 10,\n    },\n    button: {\n        backgroundColor: '#28a745',\n        paddingHorizontal: 10,\n        paddingVertical: 6,\n        textAlign: 'center',\n        borderRadius: 4,\n        borderWidth: 1,\n        borderStyle: 'solid',\n        borderColor: '#28a745',\n    },\n    textButton: {\n        color: '#fff',\n    }\n\n})\n\nexport default Post"]},"metadata":{},"sourceType":"module"}